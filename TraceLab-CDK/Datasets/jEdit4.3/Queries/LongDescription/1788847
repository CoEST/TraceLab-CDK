Currently, the syntax styles (token type settings used for syntax highlighting) in jEdit are configurable only using the Syntax Highlighting option pane of the Global Options dialog. This is not user friendly, since users do not normally know what each token type means for the specific mode(s) they're using. For example, if I want to configure the style of C++ variables, I need to match the style of a variable in some C++ buffer against the various token types in the option pane. If there are multiple token types with the same style, I need to try each one, click 'apply' and check how it affects the coloring in the buffer until I find which token type corresponds to C++ variables. I think the following would make it much easier for users to customize the styles: Provide an action that finds the token type under the caret, and opens the syntax style dialog for that token type. This way, the user doesn't even need to know the token types, he can simply put the caret on a variable, invoke the action and configure the style for variables. Later, this mechanism can be extended to provide mode-specific colors (i.e. override the global settings, like with the Editing option pane) - the style dialog can have a check-box to specify whether to set the global or mode-specific style for the token type, and jEdit can override the global settings with mode-specific ones whenever the mode is changed. But that's for another feature request, for now there's no need. 